<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Afg=
</value>
  </data>
</root>